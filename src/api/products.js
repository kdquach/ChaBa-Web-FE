import apiClient from "./client";

/**
 * L·∫•y danh s√°ch s·∫£n ph·∫©m v·ªõi ph√¢n trang v√† l·ªçc
 * @param {Object} params - Tham s·ªë truy v·∫•n
 * @param {number} [params.page=1] - Trang hi·ªán t·∫°i
 * @param {number} [params.limit=10] - S·ªë s·∫£n ph·∫©m tr√™n m·ªói trang
 * @param {string} [params.category] - L·ªçc theo danh m·ª•c
 * @param {string} [params.search] - T·ª´ kh√≥a t√¨m ki·∫øm
 * @returns {Promise<Object>} - Danh s√°ch s·∫£n ph·∫©m v√† th√¥ng tin ph√¢n trang
 */
export const fetchProducts = async (params) => {
  const data = await apiClient.get("/products", { params });
  return data;
};

/**
 * L·∫•y chi ti·∫øt s·∫£n ph·∫©m theo ID
 * @param {string} productId - ID s·∫£n ph·∫©m
 * @returns {Promise<Object>} - Th√¥ng tin chi ti·∫øt s·∫£n ph·∫©m
 */
export const fetchProductById = async (productId) => {
  const { data } = await apiClient.get(`/products/${productId}`);
  return data;
};

/**
 * T·∫°o s·∫£n ph·∫©m m·ªõi
 * @param {Object} productData - D·ªØ li·ªáu s·∫£n ph·∫©m
 * @param {string} productData.name - T√™n s·∫£n ph·∫©m
 * @param {string} productData.description - M√¥ t·∫£ s·∫£n ph·∫©m
 * @param {number} productData.price - Gi√° s·∫£n ph·∫©m
 * @param {string} productData.category - Danh m·ª•c s·∫£n ph·∫©m
 * @param {string} [productData.image] - URL ·∫£nh s·∫£n ph·∫©m
 * @returns {Promise<Object>} - Th√¥ng tin s·∫£n ph·∫©m ƒë√£ t·∫°o
 */
export const createProduct = async (productData) => {
  const { data } = await apiClient.post("/products", productData);
  return data;
};

/**
 * C·∫≠p nh·∫≠t th√¥ng tin s·∫£n ph·∫©m
 * @param {string} productId - ID s·∫£n ph·∫©m
 * @param {Object} productData - D·ªØ li·ªáu c·∫≠p nh·∫≠t
 * @param {string} [productData.name] - T√™n s·∫£n ph·∫©m
 * @param {string} [productData.description] - M√¥ t·∫£ s·∫£n ph·∫©m
 * @param {number} [productData.price] - Gi√° s·∫£n ph·∫©m
 * @param {string} [productData.category] - Danh m·ª•c s·∫£n ph·∫©m
 * @param {string} [productData.image] - URL ·∫£nh s·∫£n ph·∫©m
 * @returns {Promise<Object>} - Th√¥ng tin s·∫£n ph·∫©m ƒë√£ c·∫≠p nh·∫≠t
 */
export const updateProduct = async (productId, productData) => {
  const { data } = await apiClient.put(`/products/${productId}`, productData);
  return data;
};

/**
 * X√≥a s·∫£n ph·∫©m theo ID
 * @param {string} productId - ID s·∫£n ph·∫©m
 * @returns {Promise<{success: boolean}>} - K·∫øt qu·∫£ x√≥a s·∫£n ph·∫©m
 */
export const deleteProduct = async (productId) => {
  const { data } = await apiClient.delete(`/products/${productId}`);
  return data;
};

/**
 * L·∫•y danh s√°ch danh m·ª•c s·∫£n ph·∫©m
 * @returns {Promise<Array<string>>} - Danh s√°ch danh m·ª•c
 */
export const fetchCategories = async () => {
  const data = await apiClient.get("/categories");
  return data;
};

/**
 * L·∫•y danh s√°ch nguy√™n li·ªáu s·∫£n ph·∫©m
 * @returns {Promise<Array<string>>} - Danh s√°ch nguy√™n li·ªáu
 */
export const fetchIngredients = async () => {
  const data = await apiClient.get("/ingredients");
  console.log("fetchIngredients data:", data); // üî• debug
  return data;
};
